// Ash (duh)


#include <ansi.h>
#include <mudlib.h>
#include <bar.h>

string unique_fun;
int count;

int s_by_int(mixed *a, mixed *b);
int s_by_string(mixed *a, mixed *b);
int s_by_obj_string(mixed *a, mixed *b);


int main(string arg) {
    closure s_by;
    mixed *arr;
    int acount;
    string x;
    int i, j;
    count = 0;
    if(!arg || !stringp(arg)) 
        arg = "-s";
        
    switch(arg) {
        case "-f":
            unique_fun = "query_funds"; 
            s_by = #'s_by_int;
            break;
        case "-w":
        case "-wp":
        case "-l":
        case "-long":
            unique_fun = "query_wp"; 
            s_by = #'s_by_int;
            break;
        case "-h":
        case "-house":
            unique_fun = "query_house";
            s_by = #'s_by_string;
            break;
        default:
            unique_fun = "query_name";
            s_by = #'s_by_string;
            break;
    }
    
    i = sizeof(arr = unique_array(users(),unique_fun,-1));
   // i -= filter_array(i,#'query_environment);
    arr = sort_array(arr,s_by,unique_fun);
// START PROCESS
    write(PRINTBAR"\n");
    acount = 0;
     if(unique_fun != "query_name" 
     && unique_fun != "query_house" 
     && unique_fun != "query_wp" 
     && unique_fun != "query_funds" 
     && unique_fun != "query_rating")
     while(i--) {
        j = sizeof(arr[i]);
        while(j--)
             if(arr[i][j]->query_current_room() != "NONE")
             if(arr[i][j]->short()){
             printf("%s%s\n",
             (string)arr[i][j]->do_cc(""),
         //    to_string((mixed)call_other(arr[i][0],unique_fun)),
             (string)arr[i][j]->query_who());
             acount += arr[i][j]->query_age();
            }
   }
   if(unique_fun == "query_house")
     while(i--) {
        j = sizeof(arr[i]);
        while(j--)
            if(arr[i][j]->query_current_room() != "NONE")
            if(arr[i][j]->short()){
            printf("%s [%15s] %s %s%s\n",
               arr[i][j]->do_cc(""),
               arr[i][j]->query_house(),
               arr[i][j]->query_who(),
               arr[i][j]->do_cc(""),NORM);
               acount += arr[i][j]->query_age();
            }
                                      
   }
   if(unique_fun == "query_rating")
     while(i--) {
        j = sizeof(arr[i]);
        while(j--)
            if(arr[i][j]->query_current_room() != "NONE")
            if(arr[i][j]->short()){
            printf("%s [%10s] %s %sof House %s\n",
               arr[i][j]->do_cc(""),
               arr[i][j]->query_house(),
               arr[i][j]->query_who(),
               arr[i][j]->do_cc(""),
               capitalize(arr[i][j]->query_house())+NORM);
               acount += arr[i][j]->query_age();
            }
   }
   if(unique_fun == "query_wp")
     while(i--) {
        j = sizeof(arr[i]);
        while(j--)
            if(arr[i][j]->query_current_room() != "NONE")
            if(arr[i][j]->short()){
            printf("%s[%2d](%|15s) %s%s\n",
               arr[i][j]->do_cc(""),
               arr[i][j]->query_wp(),
               arr[i][j]->query_house(),
               arr[i][j]->query_who(),
               NORM);
               acount += arr[i][j]->query_age();
            }
                                      
   }
// WIZ TOOL
   if(this_player()->query_security_level())
   if(unique_fun == "query_funds")
     while(i--) {
        j = sizeof(arr[i]);
        while(j--)
            if(arr[i][j]->query_current_room() != "NONE")
            if(arr[i][j]->short()){
            printf("%10s M%d/S%d\n",
               arr[i][j]->query_name(),
               arr[i][j]->query_money(),
               arr[i][j]->query_savings());
               acount += arr[i][j]->query_age();
            }
                                      
   }
// STD WHO
   if(unique_fun == "query_name")
    while(i--) {
        j = sizeof(arr[i]);
        while(j--)
 // use IF to overwrite - structured from less, to most in importants
 // of what should be shown on who if multiple cases exist
            if(arr[i][j]->query_current_room() != "NONE")
            if(arr[i][j]->short()){
            count++;
            if(!arr[i][j]->query_wp()){
            x =  sprintf("         %s* ",GREY_F);
            } if(arr[i][j]->query_wp()){
            x =  sprintf("        %s[%d]%s",CYAN_F,
                 arr[i][j]->query_wp(),BLUE_F);
            } if(arr[i][j]->query_attrib("helper")){
            x =  sprintf("%s(HELPER)%s[%d]",B_WHITE_F,CYAN_F,
                 arr[i][j]->query_wp());
            } if(arr[i][j]->query_last_pk()+86400 > time()){
            x =  sprintf("    %s[%sPK%s][%s%d%s]",
                 B_RED_F,NORM+RED_F,BOLD,NORM+RED_F,
                 arr[i][j]->query_wp(),BOLD);
            } if(arr[i][j]->query_security_level()){
            x =  sprintf("%s      [%sGOD%s]%s",
                    YELLOW_F,NORM+MAGENTA_F,B_YELLOW_F,NORM+MAGENTA_F);
            } 
            printf("%10s %10s %s",
                x, (string)arr[i][j]->query_name(),
                count % 3 ? "" : "\n");
            acount += arr[i][j]->query_age();
 
        }
    }
// END PROCESS
    write(NORM+
    "\n"+PRINTBAR+YELLOW_F+
    "\n who <-w -h>                   \t\t     High Count Since Reboot: "+
    "/cmds/wiz/_mudstat"->player_count(1)+
    NORM+"\n"+PRINTBAR+"\n");
    if(this_player()->query_security_level()){
          write(GREY_F"Users: "+sizeof(users())+
          "   total days : "+acount/43200+"   average days: "
          +(acount/43200)/sizeof(users())+"\n");
   }
   return 1;
}



int s_by_int(mixed *a, mixed *b) {
    return a && b && a[0] && b[0] && (int) call_other(a[0],unique_fun) <   
    (int)call_other(b[0],unique_fun);
}

int s_by_string(mixed *a, mixed *b) {
    return a && b && a[0] && b[0] && (int) call_other(a[0],unique_fun) < 
    (int) call_other(b[0],unique_fun);
}

int s_by_obj_string(mixed *a, mixed *b) {
    return a && b && a[0] && b[0] && file_name((object)
           call_other(a[0],unique_fun)) < 
           file_name((object)call_other(b[0],unique_fun));
}


        
